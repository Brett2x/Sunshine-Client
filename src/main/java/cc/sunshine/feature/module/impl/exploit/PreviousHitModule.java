package cc.sunshine.feature.module.impl.exploit;

import cc.sunshine.eventbus.impl.packet.impl.PacketReceiveEvent;
import cc.sunshine.eventbus.interfaces.Listener;
import cc.sunshine.eventbus.interfaces.SubscribeEvent;
import cc.sunshine.feature.module.AbstractModule;
import cc.sunshine.feature.module.enums.ModuleCategory;
import cc.sunshine.feature.module.interfaces.ModuleData;
import cc.sunshine.utils.packet.PacketUtil;
import net.minecraft.network.packet.Packet;
import net.minecraft.network.packet.s2c.play.EntityPositionS2CPacket;
import net.minecraft.network.packet.s2c.play.EntityS2CPacket;
import org.lwjgl.glfw.GLFW;

import java.util.concurrent.ConcurrentLinkedQueue;

@ModuleData(name = "Previous Hit", description = "Retard", category = ModuleCategory.EXPLOIT, key = GLFW.GLFW_KEY_B)
public class PreviousHitModule extends AbstractModule {


    private final ConcurrentLinkedQueue<Packet<?>> packets = new ConcurrentLinkedQueue<>();

    @Override
    protected void onDisable() {
        packets.forEach(packet -> {
            PacketUtil.applyPacket(packet);
            packets.remove(packet);
        });
        super.onDisable();
    }

    @Override
    protected void onEnable() {
        super.onEnable();
        packets.clear();
    }

    @SubscribeEvent
    private final Listener<PacketReceiveEvent> packetReceiveEventListener = event -> {
        if(event.getPacket() instanceof EntityS2CPacket) {
            event.setCancelled(true);
            packets.add(event.getPacket());
        }
    };

}
