package cc.sunshine.feature.module.impl.exploit;

import cc.sunshine.eventbus.impl.packet.impl.PostPacketSendEvent;
import cc.sunshine.eventbus.interfaces.Listener;
import cc.sunshine.eventbus.interfaces.SubscribeEvent;
import cc.sunshine.feature.module.AbstractModule;
import cc.sunshine.feature.module.enums.ModuleCategory;
import cc.sunshine.feature.module.interfaces.ModuleData;
import cc.sunshine.feature.property.impl.IntProperty;
import cc.sunshine.utils.packet.PacketUtil;
import cc.sunshine.utils.time.Stopwatch;
import net.minecraft.client.Mouse;
import net.minecraft.item.Items;
import net.minecraft.network.packet.c2s.play.PlayerActionC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;
import net.minecraft.network.packet.s2c.play.BlockEventS2CPacket;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Direction;
import net.minecraft.world.EntityList;
import org.lwjgl.glfw.GLFW;

@ModuleData(name = "Fast Bow", category = ModuleCategory.EXPLOIT, description = "Shoots fast")
public final class FastBowModule extends AbstractModule {


    private final IntProperty delay = new IntProperty("Delay", 500, 0, 10000);
    private final IntProperty packets = new IntProperty("Packets", 5, 1, 20);
    private final Stopwatch stopwatch = new Stopwatch();

    @SubscribeEvent
    private final Listener<PostPacketSendEvent> packetSendEventListener = event -> {
        if(mc.world == null) return;

        if(!(event.getPacket() instanceof PlayerMoveC2SPacket)) {
            return;
        }

        PlayerMoveC2SPacket packet = event.getPacket();

        /*if(!packet.changesPosition() || Objects.requireNonNull(mc.player).getHealth() > 15 || !stopwatch.reached(delay.getValue()) || !mc.player.isOnGround()) {
            return;
        }*/

        //if(!stopwatch.reached(delay.getValue()) || mc.player.getHealth() == mc.player.getMaxHealth() || !packet.changesPosition() || mc.player.getInventory().getMainHandStack().getItem() != Items.BOW) return;


        //if(mc.world.getBlockState(new BlockPos((int)mc.player.getX(), (int)mc.player.getY()- 1, (int)mc.player.getZ())).isAir() && mc.world.getBlockState(new BlockPos((int)mc.player.getX(), (int)mc.player.getY()- 2, (int)mc.player.getZ())).isAir() && mc.world.getBlockState(new BlockPos((int)mc.player.getX(), (int)mc.player.getY()- 3, (int)mc.player.getZ())).isAir()) return;

        //if(!mc.player.isUsingItem()) return;

        mc.options.useKey.setPressed(true);
        for (int i = 0; i < packets.getValue(); i++) {
            PacketUtil.sendPacketNoEvent(new PlayerMoveC2SPacket.Full(packet.getX(0), packet.getY(0), packet.getZ(0), packet.getYaw(mc.player.getYaw()), packet.getPitch(mc.player.getPitch()), packet.isOnGround()));
            mc.options.useKey.setPressed(false);
        }


        stopwatch.reset();
    };

}
